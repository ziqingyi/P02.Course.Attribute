@using P33.Course.Model;
@using P33.Course.Model.Models;
@using P37.Course.Web.Core
@using PagedList.Mvc;
@using PagedList;
@model PagedList.StaticPagedList<JD_Commodity_001>

@{
    ViewBag.Title = "Index Fourth with paging";
}

<h2>Index Fourth Paging</h2>

@*if no action and controller nominated, the page index will be submit to the default action with pageIndex*@
@using (Html.BeginForm("IndexPaging", "Fourth"))
{
    <p>
        Find by Condition:
        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control", @Style = "display:inline" })
        @Html.TextBox("url", ViewBag.Url as string, new { @class = "form-control", @Style = "display:inline" })
        @Html.Submit("Search")
        @Html.ActionLink("CreateCommodity", "Create")
    </p>
    <div id="partialajaxlist">
        <table class="table">
            <tr>
                <th>Id</th>
                <th>Topic</th>
                <th>@Html.ActionLink("Price", "IndexPaging", new { orderBy = ViewBag.OrderBy, searchString = ViewBag.SearchString, page = 1 })</th>
                <th>Url</th>
                <th>Action</th>
                <th>Picture</th>
            </tr>
            @* MVVM vue *@
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @*@item.Id*@
                        @Html.DisplayFor(modelItem => item.Id)@*//strong type, can be used for display*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Url)
                    </td>
                    <td>
                        <a href="/Fourth/Details/@item.Id">Details</a>|
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                        <a id="@item.Id" href="javascript:void(0);" onclick="ajaxDelete(this)">ajaxDelete</a>
                    </td>
                    @*<td>
                            <img src="@item.ImageUrl" />
                        </td>*@
                </tr>
            }
        </table>
        @Html.Br()
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @*@Html.PagedListPager(Model, pageIndex => Url.Action("Index",
            new { pageIndex, searchString = ViewBag.SearchString,lastOrderBy = ViewBag.OrderBy}))*@
        @Html.PagedListPager(Model, pageIndex => $"/Fourth/IndexPaging?pageIndex={pageIndex}&searchString={base.ViewBag.SearchString}&url={base.ViewBag.Url}")
    </div>
}




@section scriptsXXX{
    <script TYPE="text/javascript">
        $(document).ready(function() {
                //new ajax request, load twice
                var listData = '@ViewBag.ListData';
            }
        )

        function ajaxDelete(obj) {
            $.ajax({
                    type:"POST",
                    url: '/Fourth/AjaxDelete',
                    data: {id: obj.id},
                    datatype:"text",
                    success: function(data) {
                        if (data.CanPlayTypeResult == 1) {
                            alert("delete successfully " + obj.id + " refresh page manually")
                        }
                        else if (data.CanPlayTypeResult == 2) {
                            alert("log on overtime, log in again");
                            location.href = "/home/login";
                        } else {
                            alert(data.PromptMsg);
                        }
                    },

                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }


                }

            );
        }


    </script>
}




























